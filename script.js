// üìå –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã DOM
const addBtn = document.querySelector('.addNote');
const notes = document.querySelector('.notes__list');
const modal = document.querySelector('.modal');
const modalBlock = document.querySelector('.modal__block');
const addNote = document.querySelector('.edit');
const close = document.querySelector('.del');
const changeGrid = document.querySelector('.notes__btn');
const span = document.querySelector('.notes__btn span');

const titleInput = document.querySelector('input');
const textInput = document.querySelector('.text');



// üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–º–µ—Ç–∫–∏ –∏–∑ localStorage –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
let allInfo = JSON.parse(localStorage.getItem('notes')) || [];

// üìå –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ –∑–∞–º–µ—Ç–æ–∫
const updateNotes = () => {
  localStorage.setItem('notes', JSON.stringify(allInfo));
  renderNotes();
};

// üìå –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
const deleteNote = (id) => {

  allInfo = allInfo.filter(note => note.id !== id);
  
  updateNotes();
};

// üìå –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è HTML-—ç–ª–µ–º–µ–Ω—Ç–∞ –∑–∞–º–µ—Ç–∫–∏
const createElement = ({ id, title, date, text }) => {
  const item = document.createElement('div');
  item.classList.add('notes__item');
  item.innerHTML = `
    <div class="notes__item_top">
       <h2 class="notes__item_top-title">${title}</h2>
       <p class="notes__item_top-date">${date}</p>
    </div>
    <p class="notes__item_text">${text}</p>
    <button class="notes__item-btn"><span>X</span></button>
  `;

  // üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è
  item.querySelector('.notes__item-btn').addEventListener('click', () => deleteNote(id));
  return item;
};

// üìå –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
const renderNotes = () => {
  notes.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
  allInfo.forEach(note => notes.appendChild(createElement(note)));
};

// üìå –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∏–Ω–ø—É—Ç–æ–≤
const clearInputs = () => {
  titleInput.value = '';
  textInput.value = '';
};

// üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const closeModal = () => {
  modal.classList.remove('active');
  addBtn.blur();
  clearInputs();
};

// üìå –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏
const addNewNote = () => {

  const title = titleInput.value.trim();
  const text = textInput.value.trim();

  if (!title || !text) return;

  allInfo.push({
    id: crypto.randomUUID(),
    title,
    text,
    date: new Date().toLocaleDateString(),
  });

  updateNotes();
  closeModal();
};

// üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
close.addEventListener('click', closeModal);

addBtn.addEventListener('click', () => {
  if (modal.classList.contains('active')) {
    closeModal(); // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞
  } else {
    modal.classList.add('active'); // –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∞
  }
});
addNote.addEventListener('click', addNewNote);

modal.addEventListener('click', closeModal);

modalBlock.addEventListener('click', (e) => e.stopPropagation());

/* changeGrid.addEventListener('click', () => {
  notes.classList.toggle('between')
  span.innerHTML == '–°–ø–∏—Å–æ–∫' ? span.innerHTML = '–°–µ—Ç–∫–∞' : span.innerHTML = '–°–ø–∏—Å–æ–∫'
})  */

  changeGrid.addEventListener('click', () => {
    notes.classList.toggle('between');
    span.innerHTML = notes.classList.contains('between') ? '–°–µ—Ç–∫–∞' : '–°–ø–∏—Å–æ–∫';
  });

  addBtn.addEventListener('click', () => {
    modal.classList.add('active');
    titleInput.focus(); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è
  });



// üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–º–µ—Ç–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ

renderNotes();
